#!/bin/bash

mkdir -p "$rootfs"

#
# Docker needs binfmt to run arm.  Without below commands second-stage and chroot will fail
# http://neophob.com/2014/10/run-arm-binaries-in-your-docker-container-using-boot2docker/
#
if ! mountpoint -q /proc/sys/fs/binfmt_misc; then
	echo "[+] binfmt_misc not mounted, setting up binfmts"
	mount binfmt_misc -t binfmt_misc /proc/sys/fs/binfmt_misc
fi

if [ "$suse" = true ]; then
        echo "[+] Setting up qemu environment on SUSE"
        qemu-binfmt-conf.sh
else
	update-binfmts --enable "qemu-$qemu_arch"
fi

echo "[+] Starting debootstrap (download)..."
tries=0
max_tries=5
while ! debootstrap --download-only --verbose --arch $build_arch focal "$rootfs" http://ports.ubuntu.com/ubuntu-ports; do
	((tries++))
	if [ $tries -ge $max_tries ]; then
		echo "[!] Error, maximum retries ($max_tries) reached, could not download packages!"
		exit 1
	fi
	echo "[!] Failed to download packages (attempt $tries/$max_tries), trying again in 5 minutes!"
	sleep 300
done

echo "[+] Starting debootstrap (install)..."
debootstrap --foreign --verbose --arch $build_arch focal "$rootfs" http://ports.ubuntu.com/ubuntu-ports

echo "[+] Installing qemu-$qemu_arch-static interpreter to rootfs"
if [ "$suse" = true ]; then
	cp "/usr/bin/qemu-$qemu_arch-binfmt" "$rootfs/usr/bin/"
	cp "/usr/bin/qemu-$qemu_arch" "$rootfs/usr/bin/"
else
	cp "/usr/bin/qemu-$qemu_arch-static" "$rootfs/usr/bin/"
fi

echo "[+] Starting debootstrap in chroot (second stage)..."
chroot_do /debootstrap/debootstrap --second-stage

echo "[+] Completed stage 1!"
